{"version":3,"sources":["views/landing/landing.jsx","redux/actions.js","components/cards/cards.jsx","views/paginado/paginado.jsx","views/home/home.jsx","views/form/form.jsx","components/navbar/navbar.jsx","views/error/error.jsx","components/detail/detail.jsx","views/details/details.jsx","App.js","redux/reducer.js","redux/store.js","reportWebVitals.js","index.js"],"names":["Landing","history","useHistory","onClick","e","preventDefault","console","log","push","botonHome","GET_ALL_FOOD","GET_FOOD","GET_DIETS","Cards","id","imagen","nombre","tipoDieta","dispatch","useDispatch","Info","axios","get","apidata","type","payload","data","getIdFood","className","src","alt","title","map","b","name","Paginado","recipesPerPage","totalPost","setCurrentPage","currentPage","pages","i","Math","ceil","index","Home","foodFull","useSelector","state","food","opctionDiets","dieta","useState","indexLastRecipes","indexFirstRecipes","currentRecipes","slice","length","useEffect","fetch","then","response","json","catch","diets","titulo","Form","NavBar","exact","to","Error","Detail","dietas","Details","info","foodId","Array","isArray","arr","maximo","c","x","App","location","useLocation","pathname","path","component","sensitive","render","initialState","rootReducer","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","legacy_createStore","applyMiddleware","thunkMiddleware","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c095dcfd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport default function Landing () {\r\n\r\n    const history = useHistory()\r\n\r\n    function botonHome(e) {\r\n        e.preventDefault()// la pagina evita recargarse\r\n        console.log('Hola mundo')\r\n\r\n        history.push('/Home')//\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Landing Page de Foods</h3>\r\n            <p>Imagen de fondo</p>\r\n\r\n            <p>Boton que redirige al home de la aplicacion</p>\r\n\r\n            <button onClick={(e) => botonHome(e)}>\r\n                Iniciar\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\nexport const GET_ALL_FOOD = 'GET_ALL_FOOD'\r\nexport const GET_FOOD = 'GET_FOOD'\r\nexport const GET_DIETS = 'GET_DIETS'\r\n\r\nexport const getFoods = () => {// nos conectamos con el servidor\r\n    return async (dispatch) => {\r\n        return await fetch(`http://localhost:3001/foods`)// hacemos la conexion mediante esta URL\r\n        .then((response) => response.json())// capturamos el dato con una promesa (.then) y mediante una funcion anonima la transformamos a json\r\n        .then((data) => {// capturamos el dato convertido en json para luego pasarla por una funcion\r\n            dispatch({// ejecutamos el dispatch que nos estaria dando como datos un type y payload ==> \"que tendriamos los datos de la db\"\r\n                type : GET_ALL_FOOD,\r\n                payload : data\r\n            })\r\n        })\r\n        .catch(e => console.log(e))// capturamos el error y lo imprime por consola\r\n    }\r\n}\r\n\r\nexport const getIdFood = (id) => {\r\n    return async (dispatch) => {\r\n        const apidata = await axios.get(`http://localhost:3001/foods/recipes/${id}`)\r\n        dispatch({\r\n            type : GET_FOOD,\r\n            payload : apidata.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const getDiets = () => {\r\n    return async (dispatch) => {\r\n        const diets = await axios.get(`http://localhost:3001/foods/dietas`)\r\n        dispatch({\r\n            type : GET_DIETS,\r\n            payload : diets.data\r\n        })\r\n    }\r\n}","import React from \"react\";\r\nimport \"./cards.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getIdFood } from \"../../redux/actions.js\";\r\n\r\nexport default function Cards({id, imagen, nombre, tipoDieta}) {\r\n\r\n    //const foods = useSelector((state) => state.food) extraigo los datos y los guardo en esta const \"foods\"\r\n\r\n    //paginado del home\r\n    const history = useHistory()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    function Info() {\r\n\r\n        history.push('/details')\r\n\r\n        dispatch(getIdFood(id))\r\n    }\r\n\r\n    return (\r\n        <div key={id} className=\"cards\" onClick={(e) => Info(e)}>\r\n            <img className=\"img\" src={imagen} alt={nombre} title={nombre} />\r\n            <h3 className=\"titulo\"> Platillo : {nombre} </h3>\r\n            <ul className=\"lista\"> Tipos de Dieta : {tipoDieta.map((b) => {return <li key={b.name}>{b.name}</li> })} </ul> {/*le coloco un key al <p> para para crear una relaci√≥n entre el componente y el elemento DOM */}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./paginado.css\";\r\n\r\nexport default function Paginado ({recipesPerPage, totalPost, setCurrentPage, currentPage}) {\r\n\r\n    const pages = [];// creo una matriz vacia queremos llenar esa matriz con numeros de la pagina\r\n\r\n    for(let i = 1; i <= Math.ceil(totalPost/recipesPerPage) ; i++){// divido el totas de datos en la api entre numero de datos mostrados en la pantalla\r\n        pages.push(i)// guardo el numero de recorrido a mi array\r\n    }\r\n\r\n    return(\r\n        <div className=\"paginado\">\r\n            {\r\n                pages.map((pages, index) => {\r\n                    return <button key={index} onClick={() => setCurrentPage(pages)}\r\n                    className={pages === currentPage ? 'active' : ''}// colorea el boton que esta en seleccion\r\n                    >{pages}</button>// muestro todos los numeros de la matriz\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getFoods, getDiets } from \"../../redux/actions.js\";\r\nimport Cards from \"../../components/cards/cards.jsx\";\r\nimport Paginado from \"../paginado/paginado.jsx\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./home.css\";\r\n\r\n/*al momento de entrar al home */\r\nexport default function Home () {\r\n\r\n    const foodFull = useSelector((state) => state.food)\r\n    const opctionDiets = useSelector((state) => state.dieta)\r\n    const dispatch = useDispatch()\r\n\r\n    \r\n    console.log(opctionDiets)\r\n\r\n    console.log(foodFull)\r\n\r\n    const [ currentPage, setCurrentPage ] = useState(1)//pagina actual se inicializa desde 1\r\n    const [ recipesPerPage, setRecipesPerPage] = useState(9)// cuantos productos se require por pagina\r\n\r\n    //const maximo = foodFull.length / recipesPerPage // dividido a la cantidad de food por pagina\r\n\r\n    //console.log(maximo)\r\n\r\n    const indexLastRecipes = currentPage * recipesPerPage// multiplicamos 1 * 9 = 9\r\n    const indexFirstRecipes = indexLastRecipes - recipesPerPage// 9 - 9 = 0\r\n    const currentRecipes = foodFull.slice(indexFirstRecipes, indexLastRecipes)// obtiene el indice 0 del array y el indice 9 del array == 10 datos pero omite el decimo\r\n\r\n    console.log(currentRecipes.length)\r\n\r\n    useEffect(() => { // se ejecuata la funcion de useEffect\r\n        dispatch(getFoods())// dispatch ejecutaria la funcion getfoods\r\n        dispatch(getDiets())\r\n\r\n    }, [dispatch])// en el array he colocado la constante \"dispatch\" para hacerle un seguimiento\r\n\r\n    //const paginado = (e) => { \r\n    //   \r\n    //}\r\n\r\n    //if (!currentRecipes) {\r\n    //    return <p>Cargando</p>\r\n    //}\r\n\r\n    return (\r\n        <div className=\"Home\">\r\n            {/*input de tipos de dietas*/}\r\n\r\n            <div>\r\n\r\n                <select>\r\n                    {\r\n                        opctionDiets.map((b) => {\r\n                            return (\r\n                                    <option key={b.id}>{b.name}</option>\r\n                            )\r\n                        })\r\n                    }\r\n                </select>\r\n\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n                \r\n                {\r\n                    currentRecipes.length > 0 ?\r\n                    currentRecipes.map((e) => {// envio los datos a esta etiqueta\r\n                        return (\r\n                            <div className=\"container-div\" key={e.id}>\r\n                                <Cards\r\n                                    id={e.id}\r\n                                    imagen={e.imagen}\r\n                                    nombre={e.titulo}\r\n                                    tipoDieta={e.dieta}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    }) :\r\n\r\n                    <div>\r\n                        <h2>Cargando...</h2>\r\n                    </div>\r\n                }\r\n\r\n                <Paginado\r\n                    setCurrentPage={setCurrentPage}// inicializacion de pagina\r\n                    totalPost={foodFull.length}// maximo de datos\r\n                    recipesPerPage={recipesPerPage}//numero de datos requeridos por pagina\r\n                    currentPage={currentPage}\r\n                />\r\n\r\n            </div>\r\n        \r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\n//const Info = (e) => {\r\n//\r\n//    e.preventDefault()\r\n//\r\n//    console.log(\"Hola mundo\")\r\n//}\r\n\r\n/*\r\n\r\n    <div className={styles.paginado}> \r\n        <Paginado\r\n        recipesPerPage = {recipesPerPage}\r\n        allRecipes = {foodsfull.length}\r\n        paginado= {paginado}\r\n        />\r\n    </div> \r\n */","import React from \"react\";\r\n\r\nexport default function Form() {\r\n    return(\r\n        <div>\r\n            <h2>Formulario de food</h2>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport'./navbar.css'\r\n\r\nexport default function NavBar() {\r\n    return (\r\n        <div className='nav'>\r\n            <ul className=\"list\" >\r\n                <li><NavLink className='home' exact to=\"/Home\" >Home</NavLink></li>\r\n                <li><NavLink className='form' exact to=\"/Form\" >Form</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default function Error() {\r\n    return(\r\n        <div>\r\n            <h2>Error 404</h2>\r\n            <p>Esta pagina no se encontro</p>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Detail({imagen, titulo, dietas}) {\r\n\r\n    const history = useHistory()\r\n\r\n    console.log(dietas)\r\n\r\n    function principal() {\r\n        history.push(\"/Home\")\r\n        console.log(\"Hola mundo\")\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <img src={imagen} alt={titulo} title={titulo} />\r\n            <h2>{titulo}</h2>\r\n            <ul><li>{dietas}</li></ul>\r\n\r\n            <div>\r\n                <button onClick={() => principal()}>\r\n                    Ir a Home\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Detail from \"../../components/detail/detail\";\r\n\r\nexport default function Details () {\r\n\r\n    const info = useSelector((state) => state.foodId) // en entrga un objeto \r\n    console.log(Array.isArray(info))// verifico si es verdad\r\n\r\n    const arr = [info] // por lo tanto coloco en array para hacerle un recorrido\r\n    console.log(arr)\r\n\r\n    //const [detalle, setDetalle] = useState(info)\r\n\r\n    const maximo = arr.length // esta vacio\r\n\r\n    console.log(maximo)\r\n\r\n    console.log(info)\r\n    //console.log(detalles.dieta.map((a) => {return a.name}))\r\n\r\n    //useEffect(() => {\r\n    //    setDetalle(info)\r\n    //},[])\r\n\r\n    return (\r\n        <div>\r\n            detalles de las foods\r\n            {   maximo > 0 ? \r\n            arr.map((c) => {\r\n                console.log(c.dieta)\r\n                return(\r\n                    <div key={c.id}>\r\n                        <Detail\r\n                            imagen={c.imagen}\r\n                            titulo={c.titulo}\r\n                            dietas={c.dieta.map((x) => {return x.name})}\r\n                        />\r\n                    </div>\r\n                )\r\n            }):\r\n                <div>\r\n                    <h2>Cargando...</h2>\r\n                </div>\r\n            \r\n            }\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport Landing from './views/landing/landing.jsx';\nimport Home from './views/home/home.jsx';\nimport Form from './views/form/form.jsx';\nimport NavBar from './components/navbar/navbar.jsx';\nimport Error from './views/error/error.jsx';\nimport Details from './views/details/details.jsx';\n\nfunction App() {\n\n  const location = useLocation()\n\n  console.log(location, 'location')\n\n  return (\n    <div className=\"App\">\n\n      {location.pathname !== \"/\" && <NavBar/>}{/*en la locacion del parametro es diferente y el navbar es verdadero*/}\n\n      <Switch>\n        <Route exact path='/' component={Landing} />{/*es una pagina estatica */}\n        <Route sensitive path='/Home' render={() => <Home/>} />{/*se trabaja con propiedades */}\n        <Route exact path=\"/Form\" component={Form} />{/*el pasa componentes con propiedades no acepta solo envia propiedades */}\n        <Route exact path=\"/details\" component={Details} />\n        {/*falta controlar un error */}\n        <Route exact path='*' component={Error} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","import { GET_ALL_FOOD, GET_FOOD, GET_DIETS } from \"./actions.js\";\r\n\r\nconst initialState = {\r\n    food : [],// todos los datos en general\r\n    foodId : [],\r\n    dieta : []\r\n}\r\nconsole.log(initialState.foodId)\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_ALL_FOOD:\r\n            return {\r\n                ...state,// autoguardado del estado \r\n                food : action.payload // guardamos los datos extraidos de la consulta\r\n            }\r\n        \r\n        case GET_FOOD:\r\n            return {\r\n                ...state,\r\n                foodId : action.payload\r\n            }\r\n\r\n        case GET_DIETS:\r\n            return{\r\n                ...state,\r\n                dieta : action.payload\r\n            }\r\n    \r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nexport default rootReducer","import { legacy_createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunkMiddleware  from \"redux-thunk\";\r\nimport rootReducer from \"./reducer\";\r\n\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' &&\r\nwindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose; /*iniciamos la configuracion de redux para poder trabajar con redux DevTools*/\r\n\r\nconst store = legacy_createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunkMiddleware))/* esta linea nos permitira trabajar con funciones asincronas*/\r\n)\r\n\r\n\r\nexport default store;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </Provider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}